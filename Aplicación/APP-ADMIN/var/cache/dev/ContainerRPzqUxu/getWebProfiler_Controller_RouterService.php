<?php

<<<<<<< HEAD
<<<<<<< HEAD:Aplicaci贸n/APP-ADMIN/var/cache/dev/Container24eWKRp/getWebProfiler_Controller_RouterService.php
namespace Container24eWKRp;
=======
=======
<<<<<<<< HEAD:Aplicaci贸n/APP-ADMIN/var/cache/dev/Container1VyNrWM/getWebProfiler_Controller_RouterService.php
namespace Container1VyNrWM;
========
>>>>>>> 477da2d03e5a4f1bb6508b77c2aa473ff27ca652
namespace ContainerRPzqUxu;
>>>>>>> c3c3798b07e811dc68b12039783577c1443ac405:Aplicaci贸n/APP-ADMIN/var/cache/dev/ContainerRPzqUxu/getWebProfiler_Controller_RouterService.php

>>>>>>>> main:Aplicaci贸n/APP-ADMIN/var/cache/dev/ContainerRPzqUxu/getWebProfiler_Controller_RouterService.php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getWebProfiler_Controller_RouterService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'web_profiler.controller.router' shared service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Controller\RouterController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'web-profiler-bundle'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'RouterController.php';

        return $container->services['web_profiler.controller.router'] = new \Symfony\Bundle\WebProfilerBundle\Controller\RouterController(($container->services['.container.private.profiler'] ?? $container->get_Container_Private_ProfilerService()), ($container->services['.container.private.twig'] ?? $container->get_Container_Private_TwigService()), ($container->services['router'] ?? $container->getRouterService()), NULL, new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['router.expression_language_provider'] ?? $container->getRouter_ExpressionLanguageProviderService());
        }, 1));
    }
}
