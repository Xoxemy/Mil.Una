<?php

<<<<<<< HEAD
<<<<<<< HEAD:Aplicaci贸n/APP-ADMIN/var/cache/dev/Container2x9EUrJ/getLoaderInterfaceService.php
namespace Container2x9EUrJ;
=======
=======
<<<<<<<< HEAD:Aplicaci贸n/APP-ADMIN/var/cache/dev/Container1VyNrWM/getLoaderInterfaceService.php
namespace Container1VyNrWM;
========
>>>>>>> cebea07cd9427ec42e23db05512f7a6a976d3b7f
namespace ContainerRPzqUxu;
>>>>>>> c3c3798b07e811dc68b12039783577c1443ac405:Aplicaci贸n/APP-ADMIN/var/cache/dev/ContainerRPzqUxu/getLoaderInterfaceService.php

>>>>>>>> main:Aplicaci贸n/APP-ADMIN/var/cache/dev/ContainerRPzqUxu/getLoaderInterfaceService.php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLoaderInterfaceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.errored..service_locator.xUrKPVU.Symfony\Component\Config\Loader\LoaderInterface' shared service.
     *
     * @return \Symfony\Component\Config\Loader\LoaderInterface
     */
    public static function do($container, $lazyLoad = true)
    {
        $container->throw('Cannot autowire service ".service_locator.xUrKPVU": it references interface "Symfony\\Component\\Config\\Loader\\LoaderInterface" but no such service exists. You should maybe alias this interface to one of these existing services: "routing.loader.xml", "routing.loader.yml", "routing.loader.php", "routing.loader.glob", "routing.loader.directory", "routing.loader.container", "routing.loader", "routing.loader.annotation", "routing.loader.annotation.directory", "routing.loader.annotation.file".');
    }
}
